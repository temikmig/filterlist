<!DOCTYPE html>
    <head>
        <title>Тестовое задание</title>
        <link rel="stylesheet" href="style.css" />
        <meta charset="UTF-8">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    </head>
    <body>
        <main>
            <section>
                <label>
                    Показать только активные
                    <input type="checkbox" id="showActive" />
                </label>
            </section>
            <table id="filterdata">
                <thead>
                    <th></th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Balance</th>
                    <th>Активно</th>
                    <th>id</th>
                    <th>parent</th>
                </thead>
                <tbody></tbody>
            </table>
        </main>
        <script type="text/javascript">
            $(function() {
                let list = [];
                
                function buildNode(item, cat) {
                    let tblRow = "<tr class=\"tableRow\" data-id=\"" + item.id + "\" data-parentId=\"" + item.parentId + "\" "+ (item.parentId!=0?"style=\"display: none;\"":"") +">" + 
                        "<td>" + (cat.some(i => i.parentId === item.id)?"<div class=\"checkView\">+</div>":"") + "</td>" +
                        "<td>" + item.name + "</td>" +
                        "<td>" + item.email + "</td>" + 
                        "<td>" + item.balance + "</td>" + 
                        "<td><div class=\"activeFlag " + (item.isActive?"active":"inactive") + "\"></div></td>" + 
                        "<td>" + item.id + "</td>" + 
                        "<td>" + item.parentId + "</td>" + 
                        "</tr>";

                    list.push(item.id);
                    
                    let children = '';

                    cat.filter(function(i) { return i.parentId == item.id; }).forEach(function(i) { children += buildNode(i, cat); });

                    if(children.length > 0) tblRow += children;

                    return tblRow;
                }

                const getUnique = (arr) => {
                    return arr.filter((el, ind) => ind === arr.indexOf(el));
                };
     
                $.getJSON('default.json', function(data) {
                    let table = '';

                    data.forEach(function(item) {
                        if(!list.includes(item.id)) table += buildNode(item, data);
                    });
                    
                    $(table).appendTo("#filterdata tbody");
                });

                $(document).on('click', '.checkView', function() {
                    const tr = $(this).closest('tr');
                    const id = tr.data('id');

                    if(!$(this).hasClass('open')) {
                        $('.tableRow[data-parentId="'+id+'"]').show();
                        $(this).addClass('open').html('-');
                    } else {
                        $('.tableRow[data-parentId="'+id+'"]').hide();
                        $(this).removeClass('open').html('+');
                    }
                    // if(tr.css('display') === 'none') {
                    //     $(this).html('-');
                    //     tr.show(); 
                    // } else {
                    //     tr.hide();
                    // }
                });

                $('#showActive').on('change', function() {
                    if($(this).is(':checked')) {
                        $('.activeFlag.inactive').closest('.tableRow').addClass('hidden');
                    } else {
                        $('.tableRow').removeClass('hidden');
                    }
                });
            });
        </script>
    </body>
</html>